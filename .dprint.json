{
	"$schema": "https://dprint.dev/schemas/v0.json",
	"newLineKind": "lf",
	"plugins": [
		"https://plugins.dprint.dev/typescript-0.91.4.wasm",
		"https://plugins.dprint.dev/json-0.20.0.wasm",
		"https://plugins.dprint.dev/g-plane/pretty_yaml-v0.5.1.wasm",
		"https://plugins.dprint.dev/roslyn-0.18.0.json@9586754a7e586ccda5dba4e694c0f225aabde63720c905dd85e02453b6f5e5de"
	],
	"indentWidth": 4,
	"useTabs": true,

	"typescript": {
		"semiColons": "always",
		"jsx.quoteStyle": "preferDouble",
		"quoteStyle": "preferDouble",
		"quoteProps": "consistent",
		"useBraces": "whenNotSingleLine",
		"bracePosition": "sameLine",
		"singleBodyPosition": "sameLine",
		"nextControlFlowPosition": "sameLine",
		"trailingCommas": "never",
		"preferHanging": true,
		"operatorPosition": "sameLine",
		"arrowFunction.useParentheses": "preferNone",
		"jsx.bracketPosition": "nextLine",
		"jsx.multiLineParens": "prefer",
		"typeLiteral.separatorKind.multiLine": "semiColon",
		"typeLiteral.separatorKind.singleLine": "comma",
		"enumDeclaration.memberSpacing": "newLine",
		"spaceAround": false,
		"spaceSurroundingProperties": true,
		"commentLine.forceSpaceAfterSlashes": true,
		"constructor.spaceBeforeParentheses": false,
		"constructorType.spaceAfterNewKeyword": false,
		"constructSignature.spaceAfterNewKeyword": false,
		"doWhileStatement.spaceAfterWhileKeyword": true,
		"exportDeclaration.spaceSurroundingNamedExports": true,
		"forInStatement.spaceAfterForKeyword": true,
		"forOfStatement.spaceAfterForKeyword": true,
		"forStatement.spaceAfterForKeyword": true,
		"forStatement.spaceAfterSemiColons": true,
		"functionDeclaration.spaceBeforeParentheses": false,
		"functionExpression.spaceBeforeParentheses": false,
		"functionExpression.spaceAfterFunctionKeyword": false,
		"getAccessor.spaceBeforeParentheses": false,
		"ifStatement.spaceAfterIfKeyword": true,
		"importDeclaration.spaceSurroundingNamedImports": true,
		"jsxSelfClosingElement.spaceBeforeSlash": false,
		"jsxExpressionContainer.spaceSurroundingExpression": false,
		"method.spaceBeforeParentheses": false,
		"setAccessor.spaceBeforeParentheses": true,
		"taggedTemplate.spaceBeforeLiteral": false,
		"typeAnnotation.spaceBeforeColon": false,
		"typeAssertion.spaceBeforeExpression": true,
		"whileStatement.spaceAfterWhileKeyword": true,
		"module.sortImportDeclarations": "caseInsensitive",
		"module.sortExportDeclarations": "maintain",
		"exportDeclaration.sortNamedExports": "caseInsensitive",
		"importDeclaration.sortNamedImports": "caseInsensitive"
	},

	"json": {
		"commentLine.forceSpaceAfterSlashes": true,
		"trailingCommas": "never"
	},

	"yaml": {
		"indentWidth": 2,
		"quotes": "preferDouble",
		"trailingComma": false,
		"formatComments": false,
		"dashSpacing": "oneSpace"
	},

	"roslyn": {
		"csharp.indentBlock": true,
		"csharp.indentBraces": false,
		"csharp.indentSwitchCaseSection": true,
		"csharp.indentSwitchCaseSectionWhenBlock": true,
		"csharp.indentSwitchSection": true,
		"csharp.newLineForCatch": false,
		"csharp.newLineForClausesInQuery": false,
		"csharp.NewLineForElse": false,
		"csharp.newLineForFinally": false,
		"csharp.newLineForMembersInAnonymousTypes": true,
		"csharp.newLinesForBracesInAccessors": false,
		"csharp.newLinesForBracesInAnonymousMethods": false,
		"csharp.newLinesForBracesInAnonymousTypes": false,
		"csharp.newLinesForBracesInControlBlocks": false,
		"csharp.newLinesForBracesInLambdaExpressionBody": false,
		"csharp.newLinesForBracesInMethods": false,
		"csharp.newLinesForBracesInObjectCollectionArrayInitializers": false,
		"csharp.newLinesForBracesInProperties": false,
		"csharp.newLinesForBracesInTypes": false,
		"csharp.spaceAfterCast": false,
		"csharp.spaceAfterColonInBaseTypeDeclaration": true,
		"csharp.spaceAfterComma": true,
		"csharp.spaceAfterControlFlowStatementKeyword": true,
		"csharp.spaceAfterDot": false,
		"csharp.spaceAfterMethodCallName": false,
		"csharp.spaceAfterSemicolonsInForStatement": true,
		"csharp.spaceBeforeColonInBaseTypeDeclaration": true,
		"csharp.spaceBeforeComma": false,
		"csharp.spaceBeforeDot": false,
		"csharp.spaceBeforeOpenSquareBracket": false,
		"csharp.spaceBeforeSemicolonsInForStatement": false,
		"csharp.spaceBetweenEmptyMethodCallParentheses": false,
		"csharp.spaceBetweenEmptyMethodDeclarationParentheses": false,
		"csharp.spaceBetweenEmptySquareBrackets": false,
		"csharp.spacesIgnoreAroundVariableDeclaration": false,
		"csharp.spaceWithinCastParentheses": false,
		"csharp.spaceWithinExpressionParentheses": false,
		"csharp.spaceWithinMethodCallParentheses": false,
		"csharp.spaceWithinMethodDeclarationParenthesis": false,
		"csharp.spaceWithinSquareBrackets": false,
		"csharp.spacingAfterMethodDeclarationName": false,
		"csharp.spacingAroundBinaryOperator": "single",
		"csharp.wrappingKeepStatementsOnSingleLine": true,
		"csharp.wrappingPreserveSingleLine": true
	}
}
